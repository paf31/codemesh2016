// Generated by psc-bundle 0.9.3
var PS = {};
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["Semigroupoid"] = Semigroupoid;
  exports["compose"] = compose;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS["Control.Semigroupoid"] = PS["Control.Semigroupoid"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Category = function (__superclass_Control$dotSemigroupoid$dotSemigroupoid_0, id) {
      this["__superclass_Control.Semigroupoid.Semigroupoid_0"] = __superclass_Control$dotSemigroupoid$dotSemigroupoid_0;
      this.id = id;
  };
  var id = function (dict) {
      return dict.id;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["Category"] = Category;
  exports["id"] = id;
  exports["categoryFn"] = categoryFn;
})(PS["Control.Category"] = PS["Control.Category"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var Control_Category = PS["Control.Category"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  var apply = function (f) {
      return function (x) {
          return f(x);
      };
  };
  exports["apply"] = apply;
  exports["const"] = $$const;
  exports["flip"] = flip;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
    "use strict";

  // module Data.Unit

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
    "use strict";

  // module Data.Show

  exports.showIntImpl = function (n) {
    return n.toString();
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var $foreign = PS["Data.Show"];     
  var Show = function (show) {
      this.show = show;
  };                                                 
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showInt"] = showInt;
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var voidRight = function (dictFunctor) {
      return function (x) {
          return map(dictFunctor)(Data_Function["const"](x));
      };
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["void"] = $$void;
  exports["voidRight"] = voidRight;
  exports["functorFn"] = functorFn;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];        
  var Apply = function (__superclass_Data$dotFunctor$dotFunctor_0, apply) {
      this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  var lift2 = function (dictApply) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(f)(a))(b);
              };
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["lift2"] = lift2;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Applicative = function (__superclass_Control$dotApply$dotApply_0, pure) {
      this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];        
  var Bind = function (__superclass_Control$dotApply$dotApply_0, bind) {
      this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
      this.bind = bind;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var composeKleisliFlipped = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bindFlipped(dictBind)(f)(g(a));
              };
          };
      };
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["composeKleisliFlipped"] = composeKleisliFlipped;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
    "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var $foreign = PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var runExists = Unsafe_Coerce.unsafeCoerce;
  var mkExists = Unsafe_Coerce.unsafeCoerce;
  exports["mkExists"] = mkExists;
  exports["runExists"] = runExists;
})(PS["Data.Exists"] = PS["Data.Exists"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];        
  var Monad = function (__superclass_Control$dotApplicative$dotApplicative_0, __superclass_Control$dotBind$dotBind_1) {
      this["__superclass_Control.Applicative.Applicative_0"] = __superclass_Control$dotApplicative$dotApplicative_0;
      this["__superclass_Control.Bind.Bind_1"] = __superclass_Control$dotBind$dotBind_1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(f)(function (v) {
                  return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var Control_Category = PS["Control.Category"];        
  var Bifunctor = function (bimap) {
      this.bimap = bimap;
  };
  var bimap = function (dict) {
      return dict.bimap;
  };
  var rmap = function (dictBifunctor) {
      return bimap(dictBifunctor)(Control_Category.id(Control_Category.categoryFn));
  };
  exports["Bifunctor"] = Bifunctor;
  exports["bimap"] = bimap;
  exports["rmap"] = rmap;
})(PS["Data.Bifunctor"] = PS["Data.Bifunctor"] || {});
(function(exports) {
    "use strict";

  exports.concatArray = function (xs) {
    return function (ys) {
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var $foreign = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Semigroup = function (append) {
      this.append = append;
  };                                                         
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  var semigroupFn = function (dictSemigroup) {
      return new Semigroup(function (f) {
          return function (g) {
              return function (x) {
                  return append(dictSemigroup)(f(x))(g(x));
              };
          };
      });
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupFn"] = semigroupFn;
  exports["semigroupArray"] = semigroupArray;
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];        
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Left) {
              return new Left(v1.value0);
          };
          if (v1 instanceof Right) {
              return new Right(v(v1.value0));
          };
          throw new Error("Failed pattern match at Data.Either line 46, column 3 - line 46, column 26: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 243, column 1 - line 243, column 26: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isLeft = either(Data_Function["const"](true))(Data_Function["const"](false));
  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return new Left(v(v2.value0));
              };
              if (v2 instanceof Right) {
                  return new Right(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Data.Either line 53, column 3 - line 53, column 34: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  var applyEither = new Control_Apply.Apply(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return new Left(v.value0);
          };
          if (v instanceof Right) {
              return Data_Functor.map(functorEither)(v.value0)(v1);
          };
          throw new Error("Failed pattern match at Data.Either line 89, column 3 - line 89, column 28: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["isLeft"] = isLeft;
  exports["functorEither"] = functorEither;
  exports["bifunctorEither"] = bifunctorEither;
  exports["applyEither"] = applyEither;
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
    "use strict";

  // module Control.Monad.Eff

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var monadEff = new Control_Monad.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Control_Bind.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Control_Apply.Apply(function () {
      return functorEff;
  }, Control_Monad.ap(monadEff));
  var applicativeEff = new Control_Applicative.Applicative(function () {
      return applyEff;
  }, $foreign.pureE);
  var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
    "use strict";

  // module Control.Monad.Eff.Unsafe

  exports.unsafeInterleaveEff = function (f) {
    return f;
  };
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  exports["unsafeInterleaveEff"] = $foreign.unsafeInterleaveEff;
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Field = PS["Data.Field"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var runIdentity = function (v) {
      return v;
  };
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (v) {
          return f(v);
      };
  });
  exports["runIdentity"] = runIdentity;
  exports["functorIdentity"] = functorIdentity;
})(PS["Data.Identity"] = PS["Data.Identity"] || {});
(function(exports) {
    "use strict";

  // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var $foreign = PS["Partial.Unsafe"];
  var Partial = PS["Partial"];
  exports["unsafePartial"] = $foreign.unsafePartial;
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Either = PS["Data.Either"];
  var Data_Identity = PS["Data.Identity"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var MonadRec = function (__superclass_Control$dotMonad$dotMonad_0, tailRecM) {
      this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
      this.tailRecM = tailRecM;
  };
  var tailRecM = function (dict) {
      return dict.tailRecM;
  };             
  var forever = function (dictMonadRec) {
      return function (ma) {
          return tailRecM(dictMonadRec)(function (u) {
              return Data_Functor.voidRight((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(new Data_Either.Left(u))(ma);
          })(Data_Unit.unit);
      };
  };
  exports["MonadRec"] = MonadRec;
  exports["forever"] = forever;
  exports["tailRecM"] = tailRecM;
})(PS["Control.Monad.Rec.Class"] = PS["Control.Monad.Rec.Class"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var Prelude = PS["Prelude"];        
  var MonadTrans = function (lift) {
      this.lift = lift;
  };
  var lift = function (dict) {
      return dict.lift;
  };
  exports["MonadTrans"] = MonadTrans;
  exports["lift"] = lift;
})(PS["Control.Monad.Trans"] = PS["Control.Monad.Trans"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Exists = PS["Data.Exists"];
  var Data_Either = PS["Data.Either"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans = PS["Control.Monad.Trans"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];        
  var Bound = (function () {
      function Bound(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Bound.create = function (value0) {
          return function (value1) {
              return new Bound(value0, value1);
          };
      };
      return Bound;
  })();
  var FreeT = (function () {
      function FreeT(value0) {
          this.value0 = value0;
      };
      FreeT.create = function (value0) {
          return new FreeT(value0);
      };
      return FreeT;
  })();
  var Bind = (function () {
      function Bind(value0) {
          this.value0 = value0;
      };
      Bind.create = function (value0) {
          return new Bind(value0);
      };
      return Bind;
  })();
  var monadTransFreeT = function (dictFunctor) {
      return new Control_Monad_Trans.MonadTrans(function (dictMonad) {
          return function (ma) {
              return new FreeT(function (v) {
                  return Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Either.Left.create)(ma);
              });
          };
      });
  };
  var freeT = FreeT.create;
  var bound = function (m) {
      return function (f) {
          return new Bind(Data_Exists.mkExists(new Bound(m, f)));
      };
  };
  var functorFreeT = function (dictFunctor) {
      return function (dictFunctor1) {
          return new Data_Functor.Functor(function (f) {
              return function (v) {
                  if (v instanceof FreeT) {
                      return new FreeT(function (v1) {
                          return Data_Functor.map(dictFunctor1)(Data_Bifunctor.bimap(Data_Either.bifunctorEither)(f)(Data_Functor.map(dictFunctor)(Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f))))(v.value0(Data_Unit.unit));
                      });
                  };
                  if (v instanceof Bind) {
                      return Data_Exists.runExists(function (v1) {
                          return bound(v1.value0)(function ($98) {
                              return Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f)(v1.value1($98));
                          });
                      })(v.value0);
                  };
                  throw new Error("Failed pattern match at Control.Monad.Free.Trans line 55, column 3 - line 55, column 69: " + [ f.constructor.name, v.constructor.name ]);
              };
          });
      };
  };
  var monadFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Monad.Monad(function () {
              return applicativeFreeT(dictFunctor)(dictMonad);
          }, function () {
              return bindFreeT(dictFunctor)(dictMonad);
          });
      };
  };
  var bindFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Bind.Bind(function () {
              return applyFreeT(dictFunctor)(dictMonad);
          }, function (v) {
              return function (f) {
                  if (v instanceof Bind) {
                      return Data_Exists.runExists(function (v1) {
                          return bound(v1.value0)(function (x) {
                              return bound(function (v2) {
                                  return v1.value1(x);
                              })(f);
                          });
                      })(v.value0);
                  };
                  return bound(function (v1) {
                      return v;
                  })(f);
              };
          });
      };
  };
  var applyFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Apply.Apply(function () {
              return functorFreeT(dictFunctor)(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
          }, Control_Monad.ap(monadFreeT(dictFunctor)(dictMonad)));
      };
  };
  var applicativeFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Applicative.Applicative(function () {
              return applyFreeT(dictFunctor)(dictMonad);
          }, function (a) {
              return new FreeT(function (v) {
                  return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Left(a));
              });
          });
      };
  };
  var liftFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return function (fa) {
              return new FreeT(function (v) {
                  return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(Data_Functor.map(dictFunctor)(Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad)))(fa)));
              });
          };
      };
  };
  var resume = function (dictFunctor) {
      return function (dictMonadRec) {
          var go = function (v) {
              if (v instanceof FreeT) {
                  return Data_Functor.map((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Either.Right.create)(v.value0(Data_Unit.unit));
              };
              if (v instanceof Bind) {
                  return Data_Exists.runExists(function (v1) {
                      var $77 = v1.value0(Data_Unit.unit);
                      if ($77 instanceof FreeT) {
                          return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())($77.value0(Data_Unit.unit))(function (v2) {
                              if (v2 instanceof Data_Either.Left) {
                                  return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Left(v1.value1(v2.value0)));
                              };
                              if (v2 instanceof Data_Either.Right) {
                                  return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(new Data_Either.Right(Data_Functor.map(dictFunctor)(function (h) {
                                      return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(h)(v1.value1);
                                  })(v2.value0))));
                              };
                              throw new Error("Failed pattern match at Control.Monad.Free.Trans line 49, column 9 - line 51, column 68: " + [ v2.constructor.name ]);
                          });
                      };
                      if ($77 instanceof Bind) {
                          return Data_Exists.runExists(function (v2) {
                              return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Left(Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(v2.value0(Data_Unit.unit))(function (z) {
                                  return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(v2.value1(z))(v1.value1);
                              })));
                          })($77.value0);
                      };
                      throw new Error("Failed pattern match at Control.Monad.Free.Trans line 46, column 5 - line 52, column 98: " + [ $77.constructor.name ]);
                  })(v.value0);
              };
              throw new Error("Failed pattern match at Control.Monad.Free.Trans line 44, column 3 - line 44, column 36: " + [ v.constructor.name ]);
          };
          return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
      };
  };
  var runFreeT = function (dictFunctor) {
      return function (dictMonadRec) {
          return function (interp) {
              var go = function (v) {
                  if (v instanceof Data_Either.Left) {
                      return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(v.value0));
                  };
                  if (v instanceof Data_Either.Right) {
                      return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(interp(v.value0))(function (v1) {
                          return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Left(v1));
                      });
                  };
                  throw new Error("Failed pattern match at Control.Monad.Free.Trans line 104, column 3 - line 104, column 31: " + [ v.constructor.name ]);
              };
              return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(Control_Bind.composeKleisliFlipped((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(go)(resume(dictFunctor)(dictMonadRec)));
          };
      };
  };
  var monadRecFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Monad_Rec_Class.MonadRec(function () {
              return monadFreeT(dictFunctor)(dictMonad);
          }, function (f) {
              var go = function (s) {
                  return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonad))(f(s))(function (v) {
                      if (v instanceof Data_Either.Left) {
                          return go(v.value0);
                      };
                      if (v instanceof Data_Either.Right) {
                          return Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(v.value0);
                      };
                      throw new Error("Failed pattern match at Control.Monad.Free.Trans line 78, column 7 - line 80, column 26: " + [ v.constructor.name ]);
                  });
              };
              return go;
          });
      };
  };
  exports["freeT"] = freeT;
  exports["liftFreeT"] = liftFreeT;
  exports["resume"] = resume;
  exports["runFreeT"] = runFreeT;
  exports["functorFreeT"] = functorFreeT;
  exports["applyFreeT"] = applyFreeT;
  exports["applicativeFreeT"] = applicativeFreeT;
  exports["bindFreeT"] = bindFreeT;
  exports["monadFreeT"] = monadFreeT;
  exports["monadTransFreeT"] = monadTransFreeT;
  exports["monadRecFreeT"] = monadRecFreeT;
})(PS["Control.Monad.Free.Trans"] = PS["Control.Monad.Free.Trans"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Category = PS["Control.Category"];        
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();                                                   
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromJust = function (dictPartial) {
      return function (v) {
          var __unused = function (dictPartial1) {
              return function ($dollar29) {
                  return $dollar29;
              };
          };
          return __unused(dictPartial)((function () {
              if (v instanceof Just) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Data.Maybe line 283, column 1 - line 283, column 21: " + [ v.constructor.name ]);
          })());
      };
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 78, column 3 - line 78, column 31: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeMaybe = new Control_Applicative.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  exports["Just"] = Just;
  exports["Nothing"] = Nothing;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Unit = PS["Data.Unit"];        
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var bifunctorTuple = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              return new Tuple(f(v.value0), g(v.value1));
          };
      };
  });
  exports["Tuple"] = Tuple;
  exports["bifunctorTuple"] = bifunctorTuple;
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Monad_Cont_Trans = PS["Control.Monad.Cont.Trans"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Control_Monad_Maybe_Trans = PS["Control.Monad.Maybe.Trans"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];        
  var Parallel = function (x) {
      return x;
  };
  var MonadPar = function (__superclass_Control$dotMonad$dotMonad_0, par) {
      this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
      this.par = par;
  };
  var runParallel = function (v) {
      return v;
  };
  var parallel = Parallel;
  var par = function (dict) {
      return dict.par;
  }; 
  var functorParallel = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function ($90) {
              return parallel(Data_Functor.map(dictFunctor)(f)(runParallel($90)));
          };
      });
  };
  var applyParallel = function (dictMonadPar) {
      return new Control_Apply.Apply(function () {
          return functorParallel((((dictMonadPar["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
      }, function (f) {
          return function (a) {
              return parallel(par(dictMonadPar)(Data_Function.apply)(runParallel(f))(runParallel(a)));
          };
      });
  };
  exports["MonadPar"] = MonadPar;
  exports["par"] = par;
  exports["parallel"] = parallel;
  exports["runParallel"] = runParallel;
  exports["functorParallel"] = functorParallel;
  exports["applyParallel"] = applyParallel;
})(PS["Control.Parallel.Class"] = PS["Control.Parallel.Class"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans = PS["Control.Monad.Trans"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Tuple = PS["Data.Tuple"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var CoTransform = (function () {
      function CoTransform(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CoTransform.create = function (value0) {
          return function (value1) {
              return new CoTransform(value0, value1);
          };
      };
      return CoTransform;
  })();
  var runProcess = function (dictMonadRec) {
      return Control_Monad_Free_Trans.runFreeT(Data_Identity.functorIdentity)(dictMonadRec)(function ($162) {
          return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(Data_Identity.runIdentity($162));
      });
  };
  var fuseWith = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictFunctor2) {
              return function (dictMonadRec) {
                  return function (dictMonadPar) {
                      return function (zap) {
                          return function (fs) {
                              return function (gs) {
                                  var go = function (v) {
                                      return Control_Bind.bind((dictMonadPar["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Parallel_Class.runParallel(Control_Apply.apply(Control_Parallel_Class.applyParallel(dictMonadPar))(Data_Functor.map(Control_Parallel_Class.functorParallel((((dictMonadPar["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]()))(Control_Apply.lift2(Data_Either.applyEither)(zap(Data_Tuple.Tuple.create)))(Control_Parallel_Class.parallel(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0))))(Control_Parallel_Class.parallel(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))))(function (v1) {
                                          if (v1 instanceof Data_Either.Left) {
                                              return Control_Applicative.pure((dictMonadPar["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Left(v1.value0));
                                          };
                                          if (v1 instanceof Data_Either.Right) {
                                              return Control_Applicative.pure((dictMonadPar["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(Data_Functor.map(dictFunctor2)(function (t) {
                                                  return Control_Monad_Free_Trans.freeT(function (v2) {
                                                      return go(t);
                                                  });
                                              })(v1.value0)));
                                          };
                                          throw new Error("Failed pattern match at Control.Coroutine line 73, column 5 - line 75, column 63: " + [ v1.constructor.name ]);
                                      });
                                  };
                                  return Control_Monad_Free_Trans.freeT(function (v) {
                                      return go(new Data_Tuple.Tuple(fs, gs));
                                  });
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var bifunctorTransform = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              return function ($163) {
                  return Data_Bifunctor.bimap(Data_Tuple.bifunctorTuple)(f)(g)(v($163));
              };
          };
      };
  });
  var functorTransform = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorTransform));
  var transform = function (dictMonad) {
      return function (f) {
          return Control_Monad_Free_Trans.liftFreeT(functorTransform)(dictMonad)(function (i) {
              return new Data_Tuple.Tuple(f(i), Data_Unit.unit);
          });
      };
  };
  var bifunctorCoTransform = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              return new CoTransform(f(v.value0), function ($164) {
                  return g(v.value1($164));
              });
          };
      };
  });
  var functorCoTransform = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorCoTransform));
  var composeCoTransformers = function (dictMonadRec) {
      return function (dictMonadPar) {
          return fuseWith(functorCoTransform)(functorCoTransform)(functorCoTransform)(dictMonadRec)(dictMonadPar)(function (f) {
              return function (v) {
                  return function (v1) {
                      return new CoTransform(v1.value0, function (i) {
                          return f(v.value1(i))(v1.value1(v.value0));
                      });
                  };
              };
          });
      };
  };
  var cotransform = function (dictMonad) {
      return function (o) {
          return Control_Monad_Free_Trans.freeT(function (v) {
              return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(new CoTransform(o, Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorCoTransform)(dictMonad)))));
          });
      };
  };
  var fuseCoTransform = function (dictMonadRec) {
      return function (dictMonadPar) {
          return fuseWith(functorTransform)(functorCoTransform)(Data_Identity.functorIdentity)(dictMonadRec)(dictMonadPar)(function (f) {
              return function (v) {
                  return function (v1) {
                      var $142 = v(v1.value0);
                      return f($142.value1)(v1.value1($142.value0));
                  };
              };
          });
      };
  };
  exports["CoTransform"] = CoTransform;
  exports["composeCoTransformers"] = composeCoTransformers;
  exports["cotransform"] = cotransform;
  exports["fuseCoTransform"] = fuseCoTransform;
  exports["fuseWith"] = fuseWith;
  exports["runProcess"] = runProcess;
  exports["transform"] = transform;
  exports["bifunctorTransform"] = bifunctorTransform;
  exports["functorTransform"] = functorTransform;
  exports["bifunctorCoTransform"] = bifunctorCoTransform;
  exports["functorCoTransform"] = functorCoTransform;
})(PS["Control.Coroutine"] = PS["Control.Coroutine"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports._unsafeInterleaveAff = function (aff) {
    return aff;
  }

  exports._forkAff = function (nonCanceler, aff) {
    var voidF = function(){};

    return function(success, error) {
      var canceler = aff(voidF, voidF);
      success(canceler);
      return nonCanceler;
    };
  }

  exports._makeAff = function (cb) {
    return function(success, error) {
      try {
        return cb(function(e) {
          return function() {
            error(e);
          };
        })(function(v) {
          return function() {
            success(v);
          };
        })();
      } catch (err) {
        error(err);
      }
    }
  }

  exports._pure = function (nonCanceler, v) {
    return function(success, error) {
      success(v);
      return nonCanceler;
    };
  }

  exports._fmap = function (f, aff) {
    return function(success, error) {
      try {
        return aff(function(v) {
          try {
            var v2 = f(v);
          } catch (err) {
            error(err)
          }
          success(v2);
        }, error);
      } catch (err) {
        error(err);
      }
    };
  }

  exports._bind = function (alwaysCanceler, aff, f) {
    return function(success, error) {
      var canceler1, canceler2;

      var isCanceled    = false;
      var requestCancel = false;

      var onCanceler = function(){};

      canceler1 = aff(function(v) {
        if (requestCancel) {
          isCanceled = true;

          return alwaysCanceler;
        } else {
          canceler2 = f(v)(success, error);

          onCanceler(canceler2);

          return canceler2;
        }
      }, error);

      return function(e) {
        return function(s, f) {
          requestCancel = true;

          if (canceler2 !== undefined) {
            return canceler2(e)(s, f);
          } else {
            return canceler1(e)(function(bool) {
              if (bool || isCanceled) {
                s(true);
              } else {
                onCanceler = function(canceler) {
                  canceler(e)(s, f);
                };
              }
            }, f);
          }
        };
      };
    };
  }

  exports._attempt = function (Left, Right, aff) {
    return function(success, error) {
      try {
        return aff(function(v) {
          success(Right(v));
        }, function(e) {
          success(Left(e));
        });
      } catch (err) {
        success(Left(err));
      }
    };
  }

  exports._runAff = function (errorT, successT, aff) {
    return function() {
      return aff(function(v) {
        successT(v)();
      }, function(e) {
        errorT(e)();
      });
    };
  }

  exports._liftEff = function (nonCanceler, e) {
    return function(success, error) {
      var result;
      try {
        result = e();
      } catch (err) {
        error(err);
        return nonCanceler;
      }

      success(result);
      return nonCanceler;
    };
  }

  exports._tailRecM = function (isLeft, f, a) {
    return function(success, error) {
      return function go(acc) {
        var result, status, canceler;

        // Observes synchronous effects using a flag.
        //   status = 0 (unresolved status)
        //   status = 1 (synchronous effect)
        //   status = 2 (asynchronous effect)
        while (true) {
          status = 0;
          canceler = f(acc)(function(v) {
            // If the status is still unresolved, we have observed a
            // synchronous effect. Otherwise, the status will be `2`.
            if (status === 0) {
              // Store the result for further synchronous processing.
              result = v;
              status = 1;
            } else {
              // When we have observed an asynchronous effect, we use normal
              // recursion. This is safe because we will be on a new stack.
              if (isLeft(v)) {
                go(v.value0);
              } else {
                try {
                  success(v.value0);
                } catch (err) {
                  error(err);
                }
              }
            }
          }, error);

          // If the status has already resolved to `1` by our Aff handler, then
          // we have observed a synchronous effect. Otherwise it will still be
          // `0`.
          if (status === 1) {
            // When we have observed a synchronous effect, we merely swap out the
            // accumulator and continue the loop, preserving stack.
            if (isLeft(result)) {
              acc = result.value0;
              continue;
            } else {
              try {
                success(result.value0);
              } catch (err) {
                error(err);
              }
            }
          } else {
            // If the status has not resolved yet, then we have observed an
            // asynchronous effect.
            status = 2;
          }
          return canceler;
        }

      }(a);
    };
  };
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports._makeVar = function (nonCanceler) {
    return function(success, error) {
      try {
        success({
          consumers: [],
          producers: [],
          error: undefined
        });
      } catch (err) {
        error(err);
      }

      return nonCanceler;
    };
  };

  exports._takeVar = function (nonCanceler, avar) {
    return function(success, error) {
      if (avar.error !== undefined) {
        error(avar.error);
      } else if (avar.producers.length > 0) {
        var producer = avar.producers.shift();

        producer(success, error);
      } else {
        avar.consumers.push({success: success, error: error});
      }

      return nonCanceler;
    };
  };

  exports._putVar = function (nonCanceler, avar, a) {
    return function(success, error) {
      if (avar.error !== undefined) {
        error(avar.error);
      } else if (avar.consumers.length === 0) {
        avar.producers.push(function(success, error) {
          try {
            success(a);
          } catch (err) {
            error(err);
          }
        });

        success({});
      } else {
        var consumer = avar.consumers.shift();

        try {
          consumer.success(a);
        } catch (err) {
          error(err);

          return;
        }

        success({});
      }

      return nonCanceler;
    };
  };

  exports._killVar = function (nonCanceler, avar, e) {
    return function(success, error) {
      if (avar.error !== undefined) {
        error(avar.error);
      } else {
        var errors = [];

        avar.error = e;

        while (avar.consumers.length > 0) {
          var consumer = avar.consumers.shift();

          try {
            consumer.error(e);
          } catch (err) {
            errors.push(err);
          }
        }

        if (errors.length > 0) error(errors[0]);
        else success({});
      }

      return nonCanceler;
    };
  };
})(PS["Control.Monad.Aff.Internal"] = PS["Control.Monad.Aff.Internal"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Functor = PS["Data.Functor"];
  exports["throwException"] = $foreign.throwException;
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var $foreign = PS["Control.Monad.Aff.Internal"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  exports["_killVar"] = $foreign._killVar;
  exports["_makeVar"] = $foreign._makeVar;
  exports["_putVar"] = $foreign._putVar;
  exports["_takeVar"] = $foreign._takeVar;
})(PS["Control.Monad.Aff.Internal"] = PS["Control.Monad.Aff.Internal"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];        
  var MonadEff = function (__superclass_Control$dotMonad$dotMonad_0, liftEff) {
      this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
      this.liftEff = liftEff;
  };                                                   
  var liftEff = function (dict) {
      return dict.liftEff;
  };
  exports["MonadEff"] = MonadEff;
  exports["liftEff"] = liftEff;
})(PS["Control.Monad.Eff.Class"] = PS["Control.Monad.Eff.Class"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var $foreign = PS["Control.Monad.Aff"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Monad_Aff_Internal = PS["Control.Monad.Aff.Internal"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Monoid = PS["Data.Monoid"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Function = PS["Data.Function"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Semiring = PS["Data.Semiring"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Canceler = function (x) {
      return x;
  };
  var runAff = function (ex) {
      return function (f) {
          return function (aff) {
              return $foreign._runAff(ex, f, aff);
          };
      };
  };
  var makeAff$prime = function (h) {
      return $foreign._makeAff(h);
  };
  var functorAff = new Data_Functor.Functor(function (f) {
      return function (fa) {
          return $foreign._fmap(f, fa);
      };
  });
  var fromAVBox = Unsafe_Coerce.unsafeCoerce;
  var cancel = function (v) {
      return v;
  };
  var launchAff = (function () {
      var lowerEx = Data_Functor.map(Control_Monad_Eff.functorEff)(function ($34) {
          return Canceler(Data_Functor.map(Data_Functor.functorFn)($foreign._unsafeInterleaveAff)(cancel($34)));
      });
      return function ($35) {
          return lowerEx(runAff(Control_Monad_Eff_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))($foreign._unsafeInterleaveAff($35)));
      };
  })();
  var attempt = function (aff) {
      return $foreign._attempt(Data_Either.Left.create, Data_Either.Right.create, aff);
  };
  var applyAff = new Control_Apply.Apply(function () {
      return functorAff;
  }, function (ff) {
      return function (fa) {
          return $foreign._bind(alwaysCanceler, ff, function (f) {
              return Data_Functor.map(functorAff)(f)(fa);
          });
      };
  });
  var applicativeAff = new Control_Applicative.Applicative(function () {
      return applyAff;
  }, function (v) {
      return $foreign._pure(nonCanceler, v);
  });
  var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(false));
  var alwaysCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(true));
  var forkAff = function (aff) {
      return $foreign._forkAff(nonCanceler, aff);
  };
  var killVar = function (q) {
      return function (e) {
          return Data_Function.apply(fromAVBox)(Control_Monad_Aff_Internal._killVar(nonCanceler, q, e));
      };
  };
  var makeAff = function (h) {
      return makeAff$prime(function (e) {
          return function (a) {
              return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Function["const"](nonCanceler))(h(e)(a));
          };
      });
  };
  var makeVar = Data_Function.apply(fromAVBox)(Control_Monad_Aff_Internal._makeVar(nonCanceler));
  var putVar = function (q) {
      return function (a) {
          return Data_Function.apply(fromAVBox)(Control_Monad_Aff_Internal._putVar(nonCanceler, q, a));
      };
  };
  var takeVar = function (q) {
      return Data_Function.apply(fromAVBox)(Control_Monad_Aff_Internal._takeVar(nonCanceler, q));
  };                                                                         
  var bindAff = new Control_Bind.Bind(function () {
      return applyAff;
  }, function (fa) {
      return function (f) {
          return $foreign._bind(alwaysCanceler, fa, f);
      };
  });
  var monadAff = new Control_Monad.Monad(function () {
      return applicativeAff;
  }, function () {
      return bindAff;
  });
  var monadEffAff = new Control_Monad_Eff_Class.MonadEff(function () {
      return monadAff;
  }, function (eff) {
      return $foreign._liftEff(nonCanceler, eff);
  });
  var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
      return monadAff;
  }, function (f) {
      return function (a) {
          return $foreign._tailRecM(Data_Either.isLeft, f, a);
      };
  });
  var monadParAff = new Control_Parallel_Class.MonadPar(function () {
      return monadAff;
  }, function (f) {
      return function (ma) {
          return function (mb) {
              var putOrKill = function (v) {
                  return Data_Either.either(killVar(v))(putVar(v));
              };
              return Control_Bind.bind(bindAff)(makeVar)(function (v) {
                  return Control_Bind.bind(bindAff)(makeVar)(function (v1) {
                      return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(putOrKill(v))(attempt(ma))))(function (v2) {
                          return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(putOrKill(v1))(attempt(mb))))(function (v3) {
                              return Control_Apply.apply(applyAff)(Data_Functor.map(functorAff)(f)(takeVar(v)))(takeVar(v1));
                          });
                      });
                  });
              });
          };
      };
  });
  exports["Canceler"] = Canceler;
  exports["attempt"] = attempt;
  exports["cancel"] = cancel;
  exports["forkAff"] = forkAff;
  exports["launchAff"] = launchAff;
  exports["makeAff"] = makeAff;
  exports["nonCanceler"] = nonCanceler;
  exports["runAff"] = runAff;
  exports["functorAff"] = functorAff;
  exports["applyAff"] = applyAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadAff"] = monadAff;
  exports["monadEffAff"] = monadEffAff;
  exports["monadRecAff"] = monadRecAff;
  exports["monadParAff"] = monadParAff;
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
  /* global window */
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var $foreign = PS["DOM.HTML.Types"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var htmlDocumentToParentNode = Unsafe_Coerce.unsafeCoerce;
  exports["htmlDocumentToParentNode"] = htmlDocumentToParentNode;
})(PS["DOM.HTML.Types"] = PS["DOM.HTML.Types"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var $foreign = PS["DOM.HTML"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  exports["window"] = $foreign.window;
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
    "use strict";

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };
})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var $foreign = PS["DOM.HTML.Window"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  exports["document"] = $foreign.document;
})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
(function(exports) {
    "use strict";                                             

  exports.querySelector = function (selector) {
    return function (node) {
      return function () {
        return node.querySelector(selector);
      };
    };
  };
})(PS["DOM.Node.ParentNode"] = PS["DOM.Node.ParentNode"] || {});
(function(exports) {
  /* global exports */
  "use strict";          

  exports.nullable = function(a, r, f) {
      return a == null ? r : f(a);
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var $foreign = PS["Data.Nullable"];
  var Prelude = PS["Prelude"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];                                        
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var $foreign = PS["DOM.Node.ParentNode"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Nullable = PS["Data.Nullable"];
  var DOM = PS["DOM"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  exports["querySelector"] = $foreign.querySelector;
})(PS["DOM.Node.ParentNode"] = PS["DOM.Node.ParentNode"] || {});
(function(exports) {

  exports.runEffFn4 = function runEffFn4(fn) {
    return function(a) {
      return function(b) {
        return function(c) {
          return function(d) {
            return function() {
              return fn(a, b, c, d);
            };
          };
        };
      };
    };
  };
})(PS["Data.Function.Eff"] = PS["Data.Function.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var $foreign = PS["Data.Function.Eff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["runEffFn4"] = $foreign.runEffFn4;
})(PS["Data.Function.Eff"] = PS["Data.Function.Eff"] || {});
(function(exports) {
  /* global exports */
  "use strict";
  var React =require("react"); 

  function getProps(this_) {
    return function(){
      return this_.props;
    };
  }
  exports.getProps = getProps;

  function getRefs(this_) {
    return function(){
      return this_.refs;
    };
  }                         

  function childrenToArray(children) {
    var result = [];

    React.Children.forEach(children, function(child){
      result.push(child);
    });

    return result;
  }                                         

  function getChildren(this_) {
    return function(){
      var children = this_.props.children;

      var result = childrenToArray(children);

      return result;
    };
  }
  exports.getChildren = getChildren;

  function writeState(this_) {
    return function(state){
      return function(){
        this_.setState({
          state: state
        });
        return state;
      };
    };
  }                               

  function writeStateWithCallback(this_, cb) {
    return function(state){
      return function(cb){
        return function() {
          this_.setState({
            state: state
          }, cb);
          return state;
        };
      };
    };
  }
  exports.writeStateWithCallback = writeStateWithCallback;

  function readState(this_) {
    return function(){
      return this_.state.state;
    };
  }
  exports.readState = readState;

  function transformState(this_){
    return function(update){
      return function(){
        this_.setState(function(old, props){
          return {state: update(old.state)};
        });
      };
    };
  }                                       

  function createClass(spec) {
    var result = {
      displayName: spec.displayName,
      render: function(){
        return spec.render(this)();
      },
      getInitialState: function(){
        return {
          state: spec.getInitialState(this)()
        };
      },
      componentWillMount: function(){
        return spec.componentWillMount(this)();
      },
      componentDidMount: function(){
        return spec.componentDidMount(this)();
      },
      componentWillReceiveProps: function(nextProps){
        return spec.componentWillReceiveProps(this)(nextProps)();
      },
      shouldComponentUpdate: function(nextProps, nextState){
        return spec.shouldComponentUpdate(this)(nextProps)(nextState.state)();
      },
      componentWillUpdate: function(nextProps, nextState){
        return spec.componentWillUpdate(this)(nextProps)(nextState.state)();
      },
      componentDidUpdate: function(prevProps, prevState){
        return spec.componentDidUpdate(this)(prevProps)(prevState.state)();
      },
      componentWillUnmount: function(){
        return spec.componentWillUnmount(this)();
      }
    };

    return React.createClass(result);
  }
  exports.createClass = createClass;

  function handle(f) {
    return function(e){
      return f(e)();
    };
  };
  exports.handle = handle;

  function createElement(class_) {
    return function(props){
      return function(children){
        return React.createElement.apply(React, [class_, props].concat(children));
      };
    };
  }
  exports.createElement = createElement;
  exports.createElementTagName = createElement;

  function createElementDynamic(class_) {
    return function(props) {
      return function(children){
        return React.createElement(class_, props, children);
      };
    };
  };
  exports.createElementDynamic = createElementDynamic;
  exports.createElementTagNameDynamic = createElementDynamic;

  function createFactory(class_) {
    return React.createFactory(class_);
  }
  exports.createFactory = createFactory;
})(PS["React"] = PS["React"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var $foreign = PS["React"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];        
  var spec$prime = function (getInitialState) {
      return function (renderFn) {
          return {
              render: renderFn, 
              displayName: "", 
              getInitialState: getInitialState, 
              componentWillMount: function (v) {
                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
              }, 
              componentDidMount: function (v) {
                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
              }, 
              componentWillReceiveProps: function (v) {
                  return function (v1) {
                      return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                  };
              }, 
              shouldComponentUpdate: function (v) {
                  return function (v1) {
                      return function (v2) {
                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(true);
                      };
                  };
              }, 
              componentWillUpdate: function (v) {
                  return function (v1) {
                      return function (v2) {
                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                      };
                  };
              }, 
              componentDidUpdate: function (v) {
                  return function (v1) {
                      return function (v2) {
                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                      };
                  };
              }, 
              componentWillUnmount: function (v) {
                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
              }
          };
      };
  };
  var spec = function (state) {
      return spec$prime(function (v) {
          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(state);
      });
  };
  exports["spec"] = spec;
  exports["createClass"] = $foreign.createClass;
  exports["createElementTagName"] = $foreign.createElementTagName;
  exports["createElementTagNameDynamic"] = $foreign.createElementTagNameDynamic;
  exports["createFactory"] = $foreign.createFactory;
  exports["getChildren"] = $foreign.getChildren;
  exports["getProps"] = $foreign.getProps;
  exports["handle"] = $foreign.handle;
  exports["readState"] = $foreign.readState;
  exports["writeStateWithCallback"] = $foreign.writeStateWithCallback;
})(PS["React"] = PS["React"] || {});
(function(exports) {
  /* global exports */
  "use strict";
  var React =require("react"); 

  function unsafeMkProps(key) {
    return function(value){
      var result = {};
      result[key] = value;
      return result;
    };
  }
  exports.unsafeMkProps = unsafeMkProps;

  function unsafeUnfoldProps(key) {
    return function(value){
      var result = {};
      var props = {};
      props[key] = result;

      for (var subprop in value) {
        if (value.hasOwnProperty(subprop)) {
          result[subprop] = value[subprop];
        }
      }

      return props;
    };
  }                                             

  function unsafePrefixProps(prefix) {
    return function(value){
      var result = {};

      for (var prop in value) {
        if (value.hasOwnProperty(prop)) {
          result[prefix + prop] = value[prop];
        }
      }

      return result;
    };
  }                                             

  function unsafeFromPropsArray(props) {
    var result = {};

    for (var i = 0, len = props.length; i < len; i++) {
      var prop = props[i];

      for (var key in prop) {
        if (prop.hasOwnProperty(key)) {
          result[key] = prop[key];
        }
      }
    }

    return result;
  };
  exports.unsafeFromPropsArray = unsafeFromPropsArray;
})(PS["React.DOM.Props"] = PS["React.DOM.Props"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var $foreign = PS["React.DOM.Props"];
  var React = PS["React"];                    
  var target = $foreign.unsafeMkProps("target");
  var onClick = function (f) {
      return $foreign.unsafeMkProps("onClick")(React.handle(f));
  };                                                
  var href = $foreign.unsafeMkProps("href");      
  var className = $foreign.unsafeMkProps("className");
  exports["className"] = className;
  exports["href"] = href;
  exports["onClick"] = onClick;
  exports["target"] = target;
  exports["unsafeFromPropsArray"] = $foreign.unsafeFromPropsArray;
})(PS["React.DOM.Props"] = PS["React.DOM.Props"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var React = PS["React"];
  var React_DOM_Props = PS["React.DOM.Props"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var text = Unsafe_Coerce.unsafeCoerce;
  var mkDOM = function (dynamic) {
      return function (tag) {
          return function (props) {
              var createElement = (function () {
                  if (!dynamic) {
                      return React.createElementTagName;
                  };
                  if (dynamic) {
                      return React.createElementTagNameDynamic;
                  };
                  throw new Error("Failed pattern match at React.DOM line 15, column 5 - line 17, column 55: " + [ dynamic.constructor.name ]);
              })();
              return createElement(tag)(React_DOM_Props.unsafeFromPropsArray(props));
          };
      };
  };
  var nav = mkDOM(false)("nav");
  var nav$prime = nav([  ]);      
  var p = mkDOM(false)("p");
  var p$prime = p([  ]);            
  var pre = mkDOM(false)("pre");
  var pre$prime = pre([  ]);
  var table = mkDOM(false)("table");
  var table$prime = table([  ]);
  var tbody = mkDOM(false)("tbody");
  var tbody$prime = tbody([  ]);
  var td = mkDOM(false)("td");
  var td$prime = td([  ]);      
  var th = mkDOM(false)("th");
  var th$prime = th([  ]);
  var thead = mkDOM(false)("thead");
  var thead$prime = thead([  ]);
  var tr = mkDOM(false)("tr");
  var tr$prime = tr([  ]);
  var ul = mkDOM(false)("ul");
  var ul$prime = ul([  ]);        
  var li = mkDOM(false)("li");
  var li$prime = li([  ]);
  var h2 = mkDOM(false)("h2");
  var h2$prime = h2([  ]);
  var h1 = mkDOM(false)("h1");
  var h1$prime = h1([  ]);
  var div = mkDOM(false)("div");
  var div$prime = div([  ]);
  var code = mkDOM(false)("code");
  var code$prime = code([  ]);    
  var button = mkDOM(false)("button");
  var a = mkDOM(false)("a");
  exports["a"] = a;
  exports["button"] = button;
  exports["code"] = code;
  exports["code'"] = code$prime;
  exports["div"] = div;
  exports["div'"] = div$prime;
  exports["h1"] = h1;
  exports["h1'"] = h1$prime;
  exports["h2"] = h2;
  exports["h2'"] = h2$prime;
  exports["li"] = li;
  exports["li'"] = li$prime;
  exports["mkDOM"] = mkDOM;
  exports["nav"] = nav;
  exports["nav'"] = nav$prime;
  exports["p"] = p;
  exports["p'"] = p$prime;
  exports["pre"] = pre;
  exports["pre'"] = pre$prime;
  exports["table"] = table;
  exports["table'"] = table$prime;
  exports["tbody"] = tbody;
  exports["tbody'"] = tbody$prime;
  exports["td"] = td;
  exports["td'"] = td$prime;
  exports["text"] = text;
  exports["th"] = th;
  exports["th'"] = th$prime;
  exports["thead"] = thead;
  exports["thead'"] = thead$prime;
  exports["tr"] = tr;
  exports["tr'"] = tr$prime;
  exports["ul"] = ul;
  exports["ul'"] = ul$prime;
})(PS["React.DOM"] = PS["React.DOM"] || {});
(function(exports) {
  /* global exports */
  "use strict";
  var ReactDOM =require("react-dom");
  var ReactDOMServer =require("react-dom/server"); 

  exports.renderImpl = function (nothing, just, element, container) {
    var result = ReactDOM.render(element, container);
    return result === null ? nothing : just(result);
  };
})(PS["ReactDOM"] = PS["ReactDOM"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var $foreign = PS["ReactDOM"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Data_Function_Eff = PS["Data.Function.Eff"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var React = PS["React"];                                                                     
  var render = Data_Function_Eff.runEffFn4($foreign.renderImpl)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  exports["render"] = render;
})(PS["ReactDOM"] = PS["ReactDOM"] || {});
(function(exports) {
  // Generated by psc version 0.9.3
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Coroutine_1 = PS["Control.Coroutine"];
  var Control_Coroutine_1 = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans = PS["Control.Monad.Trans"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Lens = PS["Data.Lens"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Tuple = PS["Data.Tuple"];
  var React = PS["React"];
  var React_DOM = PS["React.DOM"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Lens_Prism = PS["Data.Lens.Prism"];
  var Data_Lens_Internal_Market = PS["Data.Lens.Internal.Market"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Data_Lens_Fold = PS["Data.Lens.Fold"];
  var Data_Lens_Internal_Forget = PS["Data.Lens.Internal.Forget"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Lens_Setter = PS["Data.Lens.Setter"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Data_Semiring = PS["Data.Semiring"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Lens_Internal_Tagged = PS["Data.Lens.Internal.Tagged"];
  var Data_Lens_Getter = PS["Data.Lens.Getter"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Lens_Lens = PS["Data.Lens.Lens"];
  var simpleSpec = function (performAction) {
      return function (render) {
          return {
              performAction: performAction, 
              render: render
          };
      };
  };
  var semigroupSpec = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          return {
              performAction: function (a) {
                  return function (p) {
                      return function (s) {
                          return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine_1.functorCoTransform)(Control_Monad_Aff.monadAff))(v.performAction(a)(p)(s))(function () {
                              return v1.performAction(a)(p)(s);
                          });
                      };
                  };
              }, 
              render: function (k) {
                  return function (p) {
                      return function (s) {
                          return Data_Semigroup.append(Data_Semigroup.semigroupFn(Data_Semigroup.semigroupArray))(v.render(k)(p)(s))(v1.render(k)(p)(s));
                      };
                  };
              }
          };
      };
  });
  var defaultPerformAction = function (v) {
      return function (v1) {
          return function (v2) {
              return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine_1.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Unit.unit);
          };
      };
  };
  var createReactSpec = function (v) {
      return function (state) {
          var dispatcher = function ($$this) {
              return function (action) {
                  return Data_Functor["void"](Control_Monad_Eff.functorEff)(function __do() {
                      var v1 = React.getProps($$this)();
                      var v2 = React.readState($$this)();
                      var modify = function (f) {
                          return Control_Monad_Aff.makeAff(function (v3) {
                              return function (k) {
                                  return Control_Monad_Eff_Unsafe.unsafeInterleaveEff(function __do() {
                                      var v4 = React.readState($$this)();
                                      var $$new = f(v4);
                                      return Data_Function.apply(Data_Functor["void"](Control_Monad_Eff.functorEff))(React.writeStateWithCallback($$this)($$new)(Control_Monad_Eff_Unsafe.unsafeInterleaveEff(k(Control_Applicative.pure(Data_Maybe.applicativeMaybe)($$new)))))();
                                  });
                              };
                          });
                      };
                      var cotransformer = Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine_1.functorCoTransform)(Control_Monad_Aff.monadAff))(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine_1.functorCoTransform)(Control_Monad_Aff.monadAff))(Control_Monad_Trans.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine_1.functorCoTransform))(Control_Monad_Aff.monadAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Unsafe.unsafeInterleaveEff(React.readState($$this)))))(function (v3) {
                          return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine_1.functorCoTransform)(Control_Monad_Aff.monadAff))(Control_Coroutine_1.cotransform(Control_Monad_Aff.monadAff)(new Data_Maybe.Just(v3)))(function (v4) {
                              return Control_Monad_Trans.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine_1.functorCoTransform))(Control_Monad_Aff.monadAff)(modify(v4));
                          });
                      }));
                      var process = Control_Coroutine_1.fuseCoTransform(Control_Monad_Aff.monadRecAff)(Control_Monad_Aff.monadParAff)(Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine_1.functorTransform)(Control_Monad_Aff.monadAff))(Control_Coroutine_1.transform(Control_Monad_Aff.monadAff)(Control_Category.id(Control_Category.categoryFn))))(Control_Coroutine_1.composeCoTransformers(Control_Monad_Aff.monadRecAff)(Control_Monad_Aff.monadParAff)(cotransformer)(v.performAction(action)(v1)(v2)));
                      return Control_Monad_Eff_Unsafe.unsafeInterleaveEff(Control_Monad_Aff.launchAff(Control_Coroutine_1.runProcess(Control_Monad_Aff.monadRecAff)(process)))();
                  });
              };
          };
          var render = function ($$this) {
              return Data_Function.apply(Data_Functor.map(Control_Monad_Eff.functorEff)(React_DOM["div'"]))(Control_Apply.apply(Control_Monad_Eff.applyEff)(Control_Apply.apply(Control_Monad_Eff.applyEff)(Data_Functor.map(Control_Monad_Eff.functorEff)(v.render(dispatcher($$this)))(React.getProps($$this)))(React.readState($$this)))(React.getChildren($$this)));
          };
          return {
              spec: React.spec(state)(render), 
              dispatcher: dispatcher
          };
      };
  };
  var createClass = function (spec) {
      return function (state) {
          return Data_Function.apply(function ($98) {
              return React.createClass((function (v) {
                  return v.spec;
              })($98));
          })(createReactSpec(spec)(state));
      };
  };
  exports["createClass"] = createClass;
  exports["createReactSpec"] = createReactSpec;
  exports["defaultPerformAction"] = defaultPerformAction;
  exports["simpleSpec"] = simpleSpec;
  exports["semigroupSpec"] = semigroupSpec;
})(PS["Thermite"] = PS["Thermite"] || {});
(function(exports) {
    "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var DOM = PS["DOM"];
  var DOM_HTML = PS["DOM.HTML"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var DOM_HTML_Window = PS["DOM.HTML.Window"];
  var DOM_Node_ParentNode = PS["DOM.Node.ParentNode"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var React = PS["React"];
  var React_DOM = PS["React.DOM"];
  var React_DOM_Props = PS["React.DOM.Props"];
  var ReactDOM = PS["ReactDOM"];
  var Thermite = PS["Thermite"];
  var Data_Show = PS["Data.Show"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var S0 = (function () {
      function S0() {

      };
      S0.value = new S0();
      return S0;
  })();
  var S1 = (function () {
      function S1() {

      };
      S1.value = new S1();
      return S1;
  })();
  var S2 = (function () {
      function S2() {

      };
      S2.value = new S2();
      return S2;
  })();
  var S3 = (function () {
      function S3() {

      };
      S3.value = new S3();
      return S3;
  })();
  var S4 = (function () {
      function S4() {

      };
      S4.value = new S4();
      return S4;
  })();
  var S5 = (function () {
      function S5() {

      };
      S5.value = new S5();
      return S5;
  })();
  var S6 = (function () {
      function S6(value0) {
          this.value0 = value0;
      };
      S6.create = function (value0) {
          return new S6(value0);
      };
      return S6;
  })();
  var S7 = (function () {
      function S7(value0) {
          this.value0 = value0;
      };
      S7.create = function (value0) {
          return new S7(value0);
      };
      return S7;
  })();
  var S8 = (function () {
      function S8() {

      };
      S8.value = new S8();
      return S8;
  })();
  var S9 = (function () {
      function S9(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      S9.create = function (value0) {
          return function (value1) {
              return new S9(value0, value1);
          };
      };
      return S9;
  })();
  var S10 = (function () {
      function S10() {

      };
      S10.value = new S10();
      return S10;
  })();
  var S11 = (function () {
      function S11() {

      };
      S11.value = new S11();
      return S11;
  })();
  var S12 = (function () {
      function S12() {

      };
      S12.value = new S12();
      return S12;
  })();
  var S13 = (function () {
      function S13() {

      };
      S13.value = new S13();
      return S13;
  })();
  var S14 = (function () {
      function S14() {

      };
      S14.value = new S14();
      return S14;
  })();
  var S15 = (function () {
      function S15() {

      };
      S15.value = new S15();
      return S15;
  })();
  var S16 = (function () {
      function S16() {

      };
      S16.value = new S16();
      return S16;
  })();
  var S17 = (function () {
      function S17() {

      };
      S17.value = new S17();
      return S17;
  })();
  var S18 = (function () {
      function S18() {

      };
      S18.value = new S18();
      return S18;
  })();
  var S19 = (function () {
      function S19() {

      };
      S19.value = new S19();
      return S19;
  })();
  var S20 = (function () {
      function S20() {

      };
      S20.value = new S20();
      return S20;
  })();
  var First = (function () {
      function First() {

      };
      First.value = new First();
      return First;
  })();
  var Back = (function () {
      function Back() {

      };
      Back.value = new Back();
      return Back;
  })();
  var Next = (function () {
      function Next() {

      };
      Next.value = new Next();
      return Next;
  })();
  var Last = (function () {
      function Last() {

      };
      Last.value = new Last();
      return Last;
  })();
  var Increment = (function () {
      function Increment() {

      };
      Increment.value = new Increment();
      return Increment;
  })();
  var Increment2 = (function () {
      function Increment2() {

      };
      Increment2.value = new Increment2();
      return Increment2;
  })();
  var slidesComponent = (function () {
      var render = function (dispatch) {
          return function (v) {
              return function (slide) {
                  return function (v1) {
                      return [ React_DOM["div'"]((function () {
                          if (slide instanceof S0) {
                              return [ React_DOM["h1'"]([ React_DOM.text("Front End Development with PureScript and Thermite") ]), React_DOM["h2'"]([ React_DOM.text("Phil Freeman") ]) ];
                          };
                          if (slide instanceof S1) {
                              return [ React_DOM["h1'"]([ React_DOM.text("Intro") ]), React_DOM["p'"]([ React_DOM.text("Thermite is") ]), React_DOM["ul'"]([ React_DOM["li'"]([ React_DOM.text("A React-based UI library for PureScript") ]), React_DOM["li'"]([ React_DOM.text("\"Opinionated\"") ]), React_DOM["li'"]([ React_DOM.text("Inspired by Elm, react-blaze and OpticUI") ]), React_DOM["li'"]([ React_DOM.text("Stable (i.e. version 1.*)") ]) ]) ];
                          };
                          if (slide instanceof S2) {
                              return [ React_DOM["h1'"]([ React_DOM.text("Problems for UI Libraries") ]), React_DOM["p'"]([ React_DOM.text("UI libraries have to solve the following problems:") ]), React_DOM["ul'"]([ React_DOM["li'"]([ React_DOM.text("Multiple components") ]), React_DOM["li'"]([ React_DOM.text("3rd party components") ]), React_DOM["li'"]([ React_DOM.text("Async code (AJAX etc.)") ]) ]), React_DOM["p'"]([ React_DOM.text("Thermite uses PureScript's advanced type system features to solve these problems:") ]), React_DOM["ul'"]([ React_DOM["li'"]([ React_DOM.text("Lenses") ]), React_DOM["li'"]([ React_DOM.text("Coroutines") ]) ]) ];
                          };
                          if (slide instanceof S3) {
                              return [ React_DOM["h1'"]([ React_DOM.text("Components") ]), React_DOM["p'"]([ React_DOM.text("Thermite components are defined by:") ]), React_DOM["ul'"]([ React_DOM["li'"]([ React_DOM.text("A state type \u03c3") ]), React_DOM["li'"]([ React_DOM.text("An action type \u03b4") ]), React_DOM["li'"]([ React_DOM.text("A function which renders the current state") ]), React_DOM["li'"]([ React_DOM.text("A function which updates the current state based on an action") ]) ]), React_DOM["p'"]([ React_DOM.text("See also: The Elm Architecture (TEA)") ]) ];
                          };
                          if (slide instanceof S4) {
                              return [ React_DOM["h1'"]([ React_DOM.text("Component Types") ]), React_DOM["pre'"]([ React_DOM["code'"]([ React_DOM.text("newtype Spec eff \u03c3 \u03b4 = Spec\n  { performAction \u2237 PerformAction eff \u03c3 \u03b4\n  , render        \u2237 Render \u03c3 \u03b4\n  }\n\ntype PerformAction eff \u03c3 \u03b4\n  = \u03b4\n  \u2192 \u03c3\n  \u2192 CoTransformer (Maybe \u03c3) (\u03c3 \u2192 \u03c3) (Aff eff) Unit\n\ntype Render \u03c3 \u03b4\n  = (\u03b4 \u2192 EventHandler)\n  \u2192 \u03c3\n  \u2192 Array ReactElement\n  \u2192 Array ReactElement") ]) ]) ];
                          };
                          if (slide instanceof S5) {
                              return [ React_DOM["h1'"]([ React_DOM.text("Simple Components") ]), React_DOM["pre'"]([ React_DOM["code'"]([ React_DOM.text("simpleSpec\n  \u2237 \u2200 eff \u03c3 \u03b4\n  . PerformAction eff \u03c3 \u03b4\n  \u2192 Render \u03c3 \u03b4\n  \u2192 Spec eff \u03c3 \u03b4") ]) ]) ];
                          };
                          if (slide instanceof S6) {
                              return [ React_DOM["h1'"]([ React_DOM.text("Counter Component") ]), React_DOM["pre'"]([ React_DOM["code'"]([ React_DOM.text("type CounterState = Int\ndata CounterAction = Increment\n\ncounter = T.simpleSpec performAction render where\n  render dispatch _ count _ =\n    [ button [ onClick \\_ \u2192 dispatch Increment ]\n             [ text (show count) ]\n    ]\n\n  performAction Increment _ _ = void $ T.cotransform (_ + 1)") ]) ]), React_DOM["p'"]([ React_DOM.button([ React_DOM_Props.onClick(function (v2) {
                                  return dispatch(Increment.value);
                              }) ])([ React_DOM.text(Data_Show.show(Data_Show.showInt)(slide.value0)) ]) ]) ];
                          };
                          if (slide instanceof S7) {
                              return [ React_DOM["h1'"]([ React_DOM.text("Composing Components") ]), React_DOM["p'"]([ React_DOM.text("Components form a Monoid which gives us one type of composition:") ]), React_DOM["pre'"]([ React_DOM["code'"]([ React_DOM.text("twoCounters = counter <> counter") ]) ]), React_DOM["p'"]([ React_DOM.button([ React_DOM_Props.className("buttonLeft"), React_DOM_Props.onClick(function (v2) {
                                  return dispatch(Increment.value);
                              }) ])([ React_DOM.text(Data_Show.show(Data_Show.showInt)(slide.value0)) ]), React_DOM.button([ React_DOM_Props.className("buttonRight"), React_DOM_Props.onClick(function (v2) {
                                  return dispatch(Increment.value);
                              }) ])([ React_DOM.text(Data_Show.show(Data_Show.showInt)(slide.value0)) ]), React_DOM.div([ React_DOM_Props.className("clearBoth") ])([  ]) ]), React_DOM["p'"]([ React_DOM.text("... but perhaps not the one you were thinking of") ]), React_DOM["p'"]([ React_DOM.text("We need a way to break up the state") ]) ];
                          };
                          if (slide instanceof S8) {
                              return [ React_DOM["h1'"]([ React_DOM.text("Focusing") ]), React_DOM["p'"]([ React_DOM.text("The state type for two independent counters is") ]), React_DOM["pre'"]([ React_DOM["code'"]([ React_DOM.text("Tuple CounterState CounterState") ]) ]), React_DOM["p'"]([ React_DOM.text("And the action type is") ]), React_DOM["pre'"]([ React_DOM["code'"]([ React_DOM.text("Either CounterAction CounterAction") ]) ]), React_DOM["p'"]([ React_DOM.text("We could write explicit functions to direct the actions to the right part of the state") ]) ];
                          };
                          if (slide instanceof S9) {
                              return [ React_DOM["h1'"]([ React_DOM.text("Focusing") ]), React_DOM["p'"]([ React_DOM.text("Instead, we use a Lens to focus on a smaller part of the state, and a Prism to match a subset of the actions.") ]), React_DOM["pre'"]([ React_DOM["code'"]([ React_DOM.text("focus\n  \u2237 \u2200 eff \u03c3\u2081 \u03c3\u2082 \u03b4\u2081 \u03b4\u2082\n  . LensP \u03c3\u2082 \u03c3\u2081\n  \u2192 PrismP \u03b4\u2082 \u03b4\u2081\n  \u2192 Spec eff \u03c3\u2081 \u03b4\u2081\n  \u2192 Spec eff \u03c3\u2082 \u03b4\u2082") ]) ]), React_DOM["p'"]([ React_DOM.text("Our component becomes:") ]), React_DOM["pre'"]([ React_DOM["code'"]([ React_DOM.text("focus _1 _Left counter <> focus _2 _Right counter") ]) ]), React_DOM["p'"]([ React_DOM.button([ React_DOM_Props.className("buttonLeft"), React_DOM_Props.onClick(function (v2) {
                                  return dispatch(Increment.value);
                              }) ])([ React_DOM.text(Data_Show.show(Data_Show.showInt)(slide.value0)) ]), React_DOM.button([ React_DOM_Props.className("buttonRight"), React_DOM_Props.onClick(function (v2) {
                                  return dispatch(Increment2.value);
                              }) ])([ React_DOM.text(Data_Show.show(Data_Show.showInt)(slide.value1)) ]), React_DOM.div([ React_DOM_Props.className("clearBoth") ])([  ]) ]) ];
                          };
                          if (slide instanceof S10) {
                              return [ React_DOM["h1'"]([ React_DOM.text("Tab Components") ]), React_DOM["p'"]([ React_DOM.text("Lenses let us identify smaller parts of a product of types, which is a good model for independent components.") ]), React_DOM["p'"]([ React_DOM.text("Prisms let us identify smaller parts of a sum of types, which is a good model for tabbed applications:") ]), React_DOM["pre'"]([ React_DOM["code'"]([ React_DOM.text("split\n  \u2237 \u2200 eff \u03c3\u2081 \u03c3\u2082 \u03b4\n  . PrismP \u03c3\u2081 \u03c3\u2082\n  \u2192 Spec eff \u03c3\u2082 \u03b4\n  \u2192 Spec eff \u03c3\u2081 \u03b4") ]) ]), React_DOM["p'"]([ React_DOM.text("Note that") ]), React_DOM["ul'"]([ React_DOM["li'"]([ React_DOM.text("The action type \u03b4 does not change here") ]), React_DOM["li'"]([ React_DOM.text("No information is shared between tabs") ]) ]) ];
                          };
                          if (slide instanceof S11) {
                              return [ React_DOM["h1'"]([ React_DOM.text("List Components") ]), React_DOM["p'"]([ React_DOM.text("The last type of composition lets us define lists of subcomponents:") ]), React_DOM["pre'"]([ React_DOM["code'"]([ React_DOM.text("foreach\n  \u2237 \u2200 eff \u03c3 \u03b4\n  . (Int -> Spec eff \u03c3 \u03b4)\n  \u2192 Spec eff (List \u03c3) (Tuple Int \u03b4)") ]) ]), React_DOM["p'"]([ React_DOM.text("In OpticUI, this is generalized to a Traversal.") ]), React_DOM["p'"]([ React_DOM.text("Note that") ]), React_DOM["ul'"]([ React_DOM["li'"]([ React_DOM.text("We have a whole list of states, one for each list element") ]), React_DOM["li'"]([ React_DOM.text("The action type now includes the index of the component to update") ]) ]) ];
                          };
                          if (slide instanceof S12) {
                              return [ React_DOM["h1'"]([ React_DOM.text("Summary") ]), React_DOM["table'"]([ React_DOM["thead'"]([ React_DOM["th'"]([ React_DOM.text("Component") ]), React_DOM["th'"]([ React_DOM.text("Function") ]), React_DOM["th'"]([ React_DOM.text("Optic") ]) ]), React_DOM["tbody'"]([ React_DOM["tr'"]([ React_DOM["td'"]([ React_DOM.text("Pair (same state)") ]), React_DOM["td'"]([ React_DOM["pre'"]([ React_DOM["code'"]([ React_DOM.text("(<>)") ]) ]) ]), React_DOM["td'"]([ React_DOM.text("") ]) ]), React_DOM["tr'"]([ React_DOM["td'"]([ React_DOM.text("Pair (independent)") ]), React_DOM["td'"]([ React_DOM["pre'"]([ React_DOM["code'"]([ React_DOM.text("focus") ]) ]) ]), React_DOM["td'"]([ React_DOM.text("Lens") ]) ]), React_DOM["tr'"]([ React_DOM["td'"]([ React_DOM.text("Tabs") ]), React_DOM["td'"]([ React_DOM["pre'"]([ React_DOM["code'"]([ React_DOM.text("split") ]) ]) ]), React_DOM["td'"]([ React_DOM.text("Prism") ]) ]), React_DOM["tr'"]([ React_DOM["td'"]([ React_DOM.text("Lists") ]), React_DOM["td'"]([ React_DOM["pre'"]([ React_DOM["code'"]([ React_DOM.text("foreach") ]) ]) ]), React_DOM["td'"]([ React_DOM.text("Traversal") ]) ]) ]) ]) ];
                          };
                          if (slide instanceof S13) {
                              return [ React_DOM["h1'"]([ React_DOM.text("Task List Example") ]), React_DOM["p'"]([ React_DOM.text("Putting it all together") ]), React_DOM["p'"]([ React_DOM.a([ React_DOM_Props.href("http://functorial.com/purescript-thermite-todomvc/"), React_DOM_Props.target("_blank") ])([ React_DOM.text("Demo") ]) ]), React_DOM["p'"]([ React_DOM.a([ React_DOM_Props.href("https://github.com/paf31/purescript-thermite/blob/master/test"), React_DOM_Props.target("_blank") ])([ React_DOM.text("Code") ]) ]) ];
                          };
                          if (slide instanceof S14) {
                              return [ React_DOM["h1'"]([ React_DOM.text("Async") ]), React_DOM["p'"]([ React_DOM.text("Or \"What's this cotransform thing about?\"") ]) ];
                          };
                          if (slide instanceof S15) {
                              return [ React_DOM["h1'"]([ React_DOM.text("Coroutines") ]), React_DOM["p'"]([ React_DOM.text("The purescript-coroutines library defines the Coroutine abstraction, which generalizes") ]), React_DOM["ul'"]([ React_DOM["li'"]([ React_DOM.text("Data producers") ]), React_DOM["li'"]([ React_DOM.text("Data consumers") ]), React_DOM["li'"]([ React_DOM.text("Data transformers") ]) ]), React_DOM["p'"]([ React_DOM.text("over some base monad (usually Aff)") ]), React_DOM["p'"]([ React_DOM.text("This is a good model for various asynchronous processes:") ]), React_DOM["ul'"]([ React_DOM["li'"]([ React_DOM.text("AJAX") ]), React_DOM["li'"]([ React_DOM.text("Websockets") ]), React_DOM["li'"]([ React_DOM.text("Node streams") ]) ]) ];
                          };
                          if (slide instanceof S16) {
                              return [ React_DOM["h1'"]([ React_DOM.text("Producers and Consumers") ]), React_DOM["p'"]([ React_DOM.text("Coroutines are free monad transformers") ]), React_DOM["pre'"]([ React_DOM["code'"]([ React_DOM.text("type Co f m = FreeT f m\n\ndata Emit o a = Emit o a\ntype Producer o = Co (Emit o)\n\nnewtype Await i a = Await (i -> a)\ntype Consumer i = Co (Await i)") ]) ]) ];
                          };
                          if (slide instanceof S17) {
                              return [ React_DOM["h1'"]([ React_DOM.text("Transformers") ]), React_DOM["p'"]([ React_DOM.text("Transformers take one input and return one output") ]), React_DOM["pre'"]([ React_DOM["code'"]([ React_DOM.text("newtype Transform i o a = Transform (i -> Tuple o a)\ntype Transformer i o = Co (Transform i o)\n\ndata CoTransform i o a = CoTransform o (i -> a)\ntype CoTransformer i o = Co (CoTransform i o)\n\ncotransform\n  \u2237 \u2200 m i o\n  . Monad m\n  \u21d2 o\n  \u2192 CoTransformer i o m i") ]) ]) ];
                          };
                          if (slide instanceof S18) {
                              return [ React_DOM["h1'"]([ React_DOM.text("React as a Transformer") ]), React_DOM["p'"]([ React_DOM.text("React yields the current state and waits for state update (asynchronously!)") ]), React_DOM["pre'"]([ React_DOM["code'"]([ React_DOM.text("react :: CoTransformer (\u03c3 -> \u03c3) (Maybe \u03c3) (Aff eff) Unit") ]) ]), React_DOM["p'"]([ React_DOM.text("We can fuse this with our update coroutine:") ]), React_DOM["pre'"]([ React_DOM["code'"]([ React_DOM.text("CoTransformer (Maybe \u03c3) (\u03c3 \u2192 \u03c3) (Aff eff) Unit") ]) ]) ];
                          };
                          if (slide instanceof S19) {
                              return [ React_DOM["h1'"]([ React_DOM.text("Try Thermite") ]), React_DOM["p'"]([ React_DOM.text("Try Thermite in the browser and see results immediately:") ]), React_DOM["p'"]([ React_DOM.a([ React_DOM_Props.href("http://paf31.github.io/try-thermite/"), React_DOM_Props.target("_blank") ])([ React_DOM.text("Try it now") ]) ]) ];
                          };
                          if (slide instanceof S20) {
                              return [ React_DOM["h1'"]([ React_DOM.text("Questions?") ]) ];
                          };
                          throw new Error("Failed pattern match at Main line 146, column 7 - line 377, column 53: " + [ slide.constructor.name ]);
                      })()) ];
                  };
              };
          };
      };
      return Thermite.simpleSpec(Thermite.defaultPerformAction)(render);
  })();
  var next = function (v) {
      if (v instanceof S0) {
          return S1.value;
      };
      if (v instanceof S1) {
          return S2.value;
      };
      if (v instanceof S2) {
          return S3.value;
      };
      if (v instanceof S3) {
          return S4.value;
      };
      if (v instanceof S4) {
          return S5.value;
      };
      if (v instanceof S5) {
          return new S6(0);
      };
      if (v instanceof S6) {
          return new S7(0);
      };
      if (v instanceof S7) {
          return S8.value;
      };
      if (v instanceof S8) {
          return new S9(0, 0);
      };
      if (v instanceof S9) {
          return S10.value;
      };
      if (v instanceof S10) {
          return S11.value;
      };
      if (v instanceof S11) {
          return S12.value;
      };
      if (v instanceof S12) {
          return S13.value;
      };
      if (v instanceof S13) {
          return S14.value;
      };
      if (v instanceof S14) {
          return S15.value;
      };
      if (v instanceof S15) {
          return S16.value;
      };
      if (v instanceof S16) {
          return S17.value;
      };
      if (v instanceof S17) {
          return S18.value;
      };
      if (v instanceof S18) {
          return S19.value;
      };
      if (v instanceof S19) {
          return S20.value;
      };
      if (v instanceof S20) {
          return S0.value;
      };
      throw new Error("Failed pattern match at Main line 59, column 1 - line 59, column 19: " + [ v.constructor.name ]);
  };
  var last = function (v) {
      return S20.value;
  };
  var initialState = S0.value;
  var first = function (v) {
      return S0.value;
  };
  var back = function (v) {
      if (v instanceof S0) {
          return S20.value;
      };
      if (v instanceof S1) {
          return S0.value;
      };
      if (v instanceof S2) {
          return S1.value;
      };
      if (v instanceof S3) {
          return S2.value;
      };
      if (v instanceof S4) {
          return S3.value;
      };
      if (v instanceof S5) {
          return S4.value;
      };
      if (v instanceof S6) {
          return S5.value;
      };
      if (v instanceof S7) {
          return new S6(0);
      };
      if (v instanceof S8) {
          return new S7(0);
      };
      if (v instanceof S9) {
          return S8.value;
      };
      if (v instanceof S10) {
          return new S9(0, 0);
      };
      if (v instanceof S11) {
          return S10.value;
      };
      if (v instanceof S12) {
          return S11.value;
      };
      if (v instanceof S13) {
          return S12.value;
      };
      if (v instanceof S14) {
          return S13.value;
      };
      if (v instanceof S15) {
          return S14.value;
      };
      if (v instanceof S16) {
          return S15.value;
      };
      if (v instanceof S17) {
          return S16.value;
      };
      if (v instanceof S18) {
          return S17.value;
      };
      if (v instanceof S19) {
          return S18.value;
      };
      if (v instanceof S20) {
          return S19.value;
      };
      throw new Error("Failed pattern match at Main line 82, column 1 - line 82, column 20: " + [ v.constructor.name ]);
  };
  var navbar = (function () {
      var render = function (dispatch) {
          return function (v) {
              return function (v1) {
                  return function (v2) {
                      return [ React_DOM["nav'"]([ React_DOM.a([ React_DOM_Props.href("#"), React_DOM_Props.onClick(function (v3) {
                          return dispatch(First.value);
                      }) ])([ React_DOM.text("\u21e6") ]), React_DOM.a([ React_DOM_Props.href("#"), React_DOM_Props.onClick(function (v3) {
                          return dispatch(Back.value);
                      }) ])([ React_DOM.text("\u2190") ]), React_DOM.a([ React_DOM_Props.href("#"), React_DOM_Props.onClick(function (v3) {
                          return dispatch(Next.value);
                      }) ])([ React_DOM.text("\u2192") ]), React_DOM.a([ React_DOM_Props.href("#"), React_DOM_Props.onClick(function (v3) {
                          return dispatch(Last.value);
                      }) ])([ React_DOM.text("\u21e8") ]) ]) ];
                  };
              };
          };
      };
      var performAction = function (action) {
          return function (v) {
              return function (v1) {
                  var move = function (v2) {
                      return function (v3) {
                          if (v2 instanceof First) {
                              return first(v3);
                          };
                          if (v2 instanceof Back) {
                              return back(v3);
                          };
                          if (v2 instanceof Next) {
                              return next(v3);
                          };
                          if (v2 instanceof Last) {
                              return last(v3);
                          };
                          if (v2 instanceof Increment && v3 instanceof S6) {
                              return new S6(v3.value0 + 1 | 0);
                          };
                          if (v2 instanceof Increment && v3 instanceof S7) {
                              return new S7(v3.value0 + 1 | 0);
                          };
                          if (v2 instanceof Increment && v3 instanceof S9) {
                              return new S9(v3.value0 + 1 | 0, v3.value1);
                          };
                          if (v2 instanceof Increment2 && v3 instanceof S9) {
                              return new S9(v3.value0, v3.value1 + 1 | 0);
                          };
                          return v3;
                      };
                  };
                  return Data_Function.apply(Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff)))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(move(action)));
              };
          };
      };
      return Thermite.simpleSpec(performAction)(render);
  })();
  var main = Data_Functor["void"](Control_Monad_Eff.functorEff)((function () {
      var component = Thermite.createClass(Data_Semigroup.append(Thermite.semigroupSpec)(navbar)(slidesComponent))(initialState);
      return function __do() {
          var v = Control_Bind.bind(Control_Monad_Eff.bindEff)(DOM_HTML.window)(DOM_HTML_Window.document)();
          var v1 = Partial_Unsafe.unsafePartial(function (dictPartial) {
              return Data_Functor.map(Control_Monad_Eff.functorEff)(function ($59) {
                  return Data_Maybe.fromJust(dictPartial)(Data_Nullable.toMaybe($59));
              })(DOM_Node_ParentNode.querySelector("#container")(DOM_HTML_Types.htmlDocumentToParentNode(v)));
          })();
          return ReactDOM.render(React.createFactory(component)({}))(v1)();
      };
  })());
  exports["main"] = main;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();
